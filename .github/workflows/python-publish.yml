name: Publish Python Package

on:
  release:
    types: [published]

concurrency:
  group: deploy-${{ github.ref }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node dependencies
        run: npm install
      - name: Start test server
        run: docker compose up -d
      - name: Wait for response
        uses: nev7n/wait_for_response@v1
        with:
          url: http://localhost:5001/healthcheck/live/
      - name: Run the tests
        run: node test-fixtures.mjs || exit 1

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    environment: production
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Build package
        run: poetry build
      - name: Publish package to PyPI
        run: poetry publish
